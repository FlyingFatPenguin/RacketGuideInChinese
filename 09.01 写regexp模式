9.1 写regexp模式

一个字符串或字节字符串可以直接用作一个正则表达式模式，也可以#rx形成字面上的正则表达式值。例如，#rx"abc"是一个基于正则表达式值的字符串，并且#rx#"abc"是一个基于正则表达式值的字节字符串。或者，一个字符串或字节字符串可以以#px做前缀，如在#px"abc"中一样，稍微扩展字符串中模式的语法。

在一个正则表达式模式的大多数角色都是相匹配的文本字符串中出现的自己。因此，该模式#rx"abc"匹配在演替中的一个字符串中包含的字符a、b和C。其它角色扮演的元字符（metacharacters）和字符序列作为元序列（metasequences）。也就是说，它们指定的东西不是字面上的自我。例如，在模式#rx"a.c"中，字符a和C代表它们自己，但元字符.可以匹配任何字符。因此，该模式#rx"a.c"在演替里匹配一个a,任意字符,和C。

如果我们需要匹配字符.本身，我们可以在它前面加上一个\。字符序列\.结果就是一个元序列，因为它不匹配它本身而只是.。所以，在演替里匹配a、.和C，我们使用正则表达式模式#rx"a\\.c"。C”；双\字符是一个Racket字符串神器，它不是正则表达式模式自己的。

正则表达式函数接受一个字符串或字节字符串并产生一个正则表达式的值。当你使用正则表达式构建模式以匹配多个字符串，因为一个模式在它可以被使用在一个匹配之前被编译成了一个正则表达式的值。这个pregexp函数就像regexp，但使用扩展语法。正则表达式值做为#rx或#px的字面形式，被编译一次，尽管当它们可读时。

regexp-quote函数接受任意的字符串并返回一个模式匹配原始字符串。特别是，在输入字符串中的字符，可以作为正则表达式元字符用一个反斜杠转义，所以只有它们自己使他们安全地匹配。

> (regexp-quote "cons")

"cons"
> (regexp-quote "list?")

"list\\?"

regexp-quote函数在从一个混合的正则表达式字符串和字面的字符串构建一个完整的正则表达式是有用的。
