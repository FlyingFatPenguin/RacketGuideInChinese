13.5 Final、Augment和Inner

在java中，一个class表的方法可以被指定为最终的（final），这意味着一个子类不能重写方法。一个最终方法是使用public-final或override-final申明，取决于声明是为一个新方法还是一个重写实现。

在允许与不允许任意完全重写的两个极端之间，类系统还支持Beta类型的可扩展（augmentable）方法。一个带pubment声明的方法类似于public，但方法不能在子类中重写；它仅仅是可扩充。一个pubment方法必须显式地使用inner调用一个扩展（如果有）；一个子类使用augment扩展方法，而不是使用override。

一般来说，一个方法可以在类派生的扩展模式和重写模式之间进行切换。augride方法详述表明了一个扩展，这里这个扩展本身在子类中是可重写的的方法（虽然这个基类的实现不能重写）。同样，overment重写一个方法并使得重写的实现变得可扩展。
