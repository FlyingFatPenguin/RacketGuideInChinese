16 宏（Macro）

宏（macro）是一种语法表，它有一个关联的转换器（transformer），它将原有的表扩展（expand）为现有的表。换句话说，宏是Racket编译器的扩展。racket/base和racket的大部分句法表实际上是宏，扩展成一小部分核心结构。

像许多语言一样，Racket提供基于模式的宏，使得简单的转换易于实现和可靠使用。Racket还支持任意的宏转换器，它在Racket中实现，或在Racket中的宏扩展变体中实现。

（对于自下而上的Racket宏的介绍，你可以参考：《宏的敬畏（Fear of Macros）》）

  16.1 基于模式的宏
    16.1.1 define-syntax-rule
    16.1.2 词法范围
    16.1.3 define-syntax和syntax-rules
    16.1.4 匹配序列
    16.1.5 标识符宏
    16.1.6 set!转化器
    16.1.7 宏的宏生成
    16.1.8 扩展的例子：函数的参考调用
  16.2 通用宏转化器
    16.2.1 语法对象
    16.2.2 宏转化器程序
    16.2.3 混合模式和表达式：syntax-case
    16.2.4 with-syntax和generate-temporaries
    16.2.5 编译和运行时相
    16.2.6 通用相层级
      16.2.6.1 相绑定
      16.2.6.2 相和模块
    16.2.7 语法污染
