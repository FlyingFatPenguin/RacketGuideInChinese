3.12 无效值（Void）和未定义值（Undefined）

某些过程或表达式形式不需要结果值。例如，display程序仅调用输出的副作用。在这样的情况下，得到的值通常是一个特殊的常量，打印为#<void>。当一个表达式的结果是简单的#<void>，REPL不打印任何东西。

void程序接受任意数量的参数并返回#<void>。（即，void标识符绑定到一个返回#<void>的程序，而不是直接绑定到#<void>。）

例如：
> (void)
> (void 1 2 3)
> (list (void))
'(#<void>)

undefined常量，它打印为#<undefined>，有时是作为一个参考的结果，其值是不可用的。在Racket以前的版本（6.1以前的版本），过早参照一个局部绑定会产生#<undefined>；而不是像太早的参照现在会引发一个异常。

(define (fails)
  (define x x)
  x)

> (fails)
x: undefined;
 cannot use before initialization
