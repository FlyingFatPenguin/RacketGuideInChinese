4 表达式和定义

Racket语言概要这一章介绍了一些基本的Racket的句法形式：定义、程序、条件表达式等。本节提供这些形式的更详细的信息，以及一些附加的基本形式。

4.1 符号
4.2 标识符和绑定
4.3 函数调用（过程程序）
  4.3.1 赋值顺序和数量
  4.3.2 关键字参数
  4.3.3 apply函数
4.4 lambda函数（程序）
  4.4.1 申明剩余（rest）参数
  4.4.2 声明可选（optional）参数
  4.4.3 声明关键字（keyword）参数
  4.4.4 多解函数：case-lambda
4.5 定义：define
  4.5.1 函数速记法
  4.5.2 特殊功能速记法
  4.5.3 多值和define-values
  4.5.4 内部定义
4.6 本地绑定
  4.6.1 并行绑定：let
  4.6.2 顺序绑定：let*
  4.6.3 递归绑定：letrec
  4.6.4 命名let
  4.6.5 多值绑定：let-values，let*-values，letrec-values
4.7 条件分支
  4.7.1 简单分支：if
  4.7.2 组合测试：and和or
  4.7.3 约束测试：cond
4.8 排序
  4.8.1 前置效应：begin
  4.8.2 后置效应：begin0
  4.8.3 条件效应：when和unless
4.9 赋值：set!
  4.9.1 使用的指导原则
  4.9.2 多值赋值：set!-values
4.10 引用：quote和'
4.11 类引用：quasiquote和`
4.12 简单调度：case
4.13 动态绑定：parameterize
